<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HDOJ-1002]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2F2019%2F10%2F21%2F1002.html</url>
    <content type="text"><![CDATA[Problem Description： I have a very simple problem for you. Given two integers A and B, your job is to calculate the Sum of A + B. Input： The first line of the input contains an integer T(1&lt;=T&lt;=20) which means the number of test cases. Then T lines follow, each line consists of two positive integers, A and B. Notice that the integers are very large, that means you should not process them by using 32-bit integer. You may assume the length of each integer will not exceed 1000. 可以理解为大整数相加，为了避免溢出，需要采取一些特殊方法。 想法：是把大整数转化为字符串来相加。 下面是用c++实现的代码。 12345678910111213141516171819202122232425262728293031323334353637383940414243#include&lt;iostream&gt;using namespace std ;int main()&#123;string a,b;int n,t=1;do&#123; cin&gt;&gt;n;&#125;while(n&lt;0||n&gt;20);while(n&gt;0)&#123;cin&gt;&gt;a&gt;&gt;b;int k=0;int i,j;string sum=&quot;&quot;;char c;for(i=a.size()-1,j=b.size()-1;i&gt;=0&amp;&amp;i&gt;=0;i--,j--)&#123;if(k&gt;9)&#123; k=a[i]+b[j]-96+1;&#125;else&#123; k=a[i]+b[j]-96;&#125;if(k&gt;9)&#123; c=char(k-10+48); sum=c+sum;&#125;else&#123; c=char(k+48); sum=c+sum;&#125;&#125;if(k&gt;9)&#123; char add=49; sum=add+sum;&#125;n--;cout&lt;&lt;&quot;case &quot;&lt;&lt;t++&lt;&lt;&quot;:&quot;&lt;&lt;endl;cout&lt;&lt;a&lt;&lt;&quot; + &quot;&lt;&lt;b&lt;&lt;&quot;=&quot;&lt;&lt;sum&lt;&lt;endl;&#125;return 0;&#125; 用以上代码在编辑器能实现，可提交的时候会提示Compilation Error，现在还没有解决，肝出来再补充。 下面是网站大佬写的，是ac成功的代码。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#include &lt;iostream&gt;#include &lt;sstream&gt;#include &lt;string&gt;#include &lt;algorithm&gt;#include &lt;vector&gt;using namespace std;int n;string a,b;vector &lt;int&gt; x,y,ans;inline void Trans()&#123; ans.clear(); x.clear(); y.clear(); x.resize(a.size()); y.resize(b.size()); int maxlen=max(x.size(),y.size()); ans.resize(maxlen+1); stringstream ss; for(int i=0;i&lt;=a.size()-1;i++) &#123; ss.clear(); ss&lt;&lt;a.substr(i,1); ss&gt;&gt;x[i]; &#125; for(int i=0;i&lt;=b.size()-1;i++) &#123; ss.clear(); ss&lt;&lt;b.substr(i,1); ss&gt;&gt;y[i]; &#125;&#125;inline void Calculate()&#123; int pa,px,py; pa=ans.size()-1; px=x.size()-1; py=y.size()-1; while(pa&gt;0) &#123; if(px&gt;=0 &amp;&amp; py&gt;=0) ans[pa]=x[px]+y[py]; if(px&lt;0) ans[pa]=y[py]; if(py&lt;0) ans[pa]=x[px]; pa--; px--; py--; &#125; for(int i=ans.size()-1;i&gt;=1;i--) &#123; ans[i-1]+=ans[i]/10; ans[i]=ans[i]%10; &#125;&#125;inline void Print()&#123; if(ans[0]==0) &#123; cout&lt;&lt;a&lt;&lt;" "&lt;&lt;"+"&lt;&lt;" "&lt;&lt;b&lt;&lt;" "&lt;&lt;"="&lt;&lt;" "; for(int i=1;i&lt;=ans.size()-1;i++) cout&lt;&lt;ans[i]; cout&lt;&lt;endl; &#125; else &#123; cout&lt;&lt;a&lt;&lt;" "&lt;&lt;"+"&lt;&lt;" "&lt;&lt;b&lt;&lt;" "&lt;&lt;"="&lt;&lt;" "; for(int i=0;i&lt;=ans.size()-1;i++) cout&lt;&lt;ans[i]; cout&lt;&lt;endl; &#125;&#125;int main()&#123; ios::sync_with_stdio(false); cin&gt;&gt;n; for(int i=1;i&lt;=n;i++) &#123; a.clear(); b.clear(); cin&gt;&gt;a&gt;&gt;b; Trans(); Calculate(); cout&lt;&lt;"Case "&lt;&lt;i&lt;&lt;":"&lt;&lt;endl; Print(); if(i!=n) cout&lt;&lt;endl; &#125;&#125; 缺项：两种代码都只能实现位数相同的大整数相加。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>HDOJ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[整数反转]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2F2019%2F10%2F13%2F%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC.html</url>
    <content type="text"><![CDATA[题目：给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。（LeetCode第七题）方法1：弹出和推入数字 &amp; 溢出前进行检查123456789101112131415161718class Solution &#123;public: int reverse(int x) &#123; int a=0; while(x !=0) &#123; int t=x%10; x/=10; if(a&gt;INT_MAX/10||(a == INT_MAX/10&amp;&amp;t&gt;7)) return 0; if(a&lt;INT_MIN/10||(a == INT_MIN/10&amp;&amp;t&lt;-8)) return 0; a=a*10+t; &#125; return a; &#125;&#125;; 做题中出现的问题：Java不会溢出异常，所以不能简单地用Java的异常处理机制 关于本题还有很多思路，想清楚了再补上吧。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数组乱序]]></title>
    <url>%2F%E7%AE%97%E6%B3%95%2F2019%2F10%2F06%2F%E6%95%B0%E7%BB%84%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%BE%93%E5%87%BA.html</url>
    <content type="text"><![CDATA[已知数组a要求乱序输出它。 方法一：从已知数组a中随机取一个数，然后按顺序赋值给另一个长度相同数组b，在赋值给数组b之前，先检查是否已经加入过。 这种方法有明显的缺点，在数据变多时需要耗费极大的时间。 方法二： 先随机出已知数组a的下标值 将取出下标对应数组a的值赋给数组b 删除下标值对应数组a的元素 重复上述操作直至数组a长度为0 代码实现： 12345678910111213141516171819202122public int [] m2(int [] a)&#123; Random rand = new Random(); int [] b = new int[a.length]; int k = 0; while (a.length&gt;0) &#123; int index = rand.nextInt(a.length);//随即数组a下标 b[k++] = a[index]; a = removeElement(a[index], a); &#125; return b; &#125; public int [] removeElement(int element,int [] a)&#123; int [] atemp =new int[a.length-1]; int k = 0; for (int i = 0; i &lt; a.length; i++) &#123; if(a[i]!=element)&#123; atemp[k++] = a[i]; &#125; &#125; return atemp; &#125; 第二种方法的运算次数是根据数组长度而定的，缺点是大部分运算都耗在删除的判断上,主要是因为数组不像链表那样能删除一个指定位置的值。 方法三： 就给数组b [a.length]赋值随机生成的0-1的浮点数 对数组b进行排序生成数组 按顺序从b数组的值找到finda数组的值对应下标数组a的值 （这个方法出现了一个错误） 1234567891011121314151617181920public int [] m3(int [] a)&#123; Random rand = new Random();int [] b = new int[a.length]; int k = 0; int l = a.length; int [] finda=new int[a.length]; while (l--&gt;0) &#123; b[k++] = rand.nextInt(a.length); &#125;System.arraycopy(b,0,finda,0,a.length);//将数组赋值给数组findaArrays.sort(b);//对数组b 进行排序 for(int j=0;j&lt;a.length;j++) for(int f=0;f&lt;a.length;f++) &#123; if(b[j]==finda[f]) &#123; b[j]= a[f] ; &#125; &#125; return b;&#125; 这个方法的缺点是需要耗费相当的时间在数组的排序和查找上，比方法二慢点。 方法四：从已知数组a随机选一个数 将这个数赋值到b上 然后将数组a的最后一个值赋值给前面随机到的数的位置上 将数组a长度-1 再从数组a下标-1的数组中随机 重复上述操作直至cbRand等于数组长度 123456789101112131415public int [] m4(int [] a) &#123; int [] b =new int[a.length]; int cbRand = 0;// 索引 int cbPosition = 0;// 位置 int k =0; do &#123; Random rand = new Random(); int r = a.length - cbRand; cbPosition = rand.nextInt(r); b[k++] = a[cbPosition]; cbRand++; a[cbPosition] = a[r - 1];// 将最后一位数值赋值给已经被使用的cbPosition &#125; while (cbRand &lt; a.length); return b; &#125; 这种方法很好运算次数就是数组长度。 下面是测试代码和结果：1234567891011121314public static void main(String[] args) &#123; int[] a = new int[10]; for (int i = 0; i &lt; a.length; i++) &#123; a[i] = i + 1; &#125; System.out.println("a="+Arrays.toString(a)); luanXutest t = new luanXutest(); int [] m2 = t.m2(a); System.out.println("m2="+Arrays.toString(m2)); int [] m3 = t.m3(a); System.out.println("m3="+Arrays.toString(m3)); int [] m4 = t.m4(a); System.out.println("m4="+Arrays.toString(m4));&#125; 随机生成结果： 1234a=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]m2=[1, 6, 2, 7, 3, 10, 8, 4, 5, 9]m3=[9, 9, 9, 1, 5, 9, 9, 4, 5, 8]m4=[6, 3, 7, 8, 4, 5, 2, 1, 9, 10] 可见方法三能实现随机输出而不能乱序输出，因为在生成随机数组b时数组中元素可能相同。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[系统资源]]></title>
    <url>%2Fjava%2F2019%2F07%2F31%2F2019-07-31-%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90.html</url>
    <content type="text"><![CDATA[一、1000个0-9之间的随机整数，并分别统计概率123456789101112131415import java.util.*;public class RandNumber &#123;public static void main(String[]args)&#123; int[] i=new int[10]; int a,j; Random rand=new Random(); for(a=0;a&lt;1000;a++) &#123; j=rand.nextInt(10); i[j]++; &#125; for(j=0;j&lt;=9;j++) System.out.println(j+"出现的次数："+i[j]+", 出现的概率为："+(float)i[j]/10+"%"); &#125;&#125; 随机输出结果： 123456789100出现的次数：75, 出现的概率为：7.5%1出现的次数：95, 出现的概率为：9.5%2出现的次数：121, 出现的概率为：12.1%3出现的次数：104, 出现的概率为：10.4%4出现的次数：122, 出现的概率为：12.2%5出现的次数：96, 出现的概率为：9.6%6出现的次数：98, 出现的概率为：9.8%7出现的次数：95, 出现的概率为：9.5%8出现的次数：111, 出现的概率为：11.1%9出现的次数：83, 出现的概率为：8.3% 二、求一个整数数组的最大值、最小值、平均值和数组所有元素的和。12345678910111213141516171819import java.util.*;public class RandNumber &#123;public static void main(String[]args)&#123;int[] i=new int[10]; int a,j; int sum=0; Random rand=new Random(); for(a=0;a&lt;i.length;a++) &#123; i[a]=rand.nextInt(100); sum+=i[a]; &#125; j=sum/i.length; System.out.println("i="+Arrays.toString(i));//产生数组的String表示 Arrays.sort(i);//对数组进行排序 System.out.println("i="+Arrays.toString(i)); System.out.println("最大值"+i[i.length-1]+"; 最小值："+i[0]+"; 平均值："+j+"; 总和:"+sum &#125;&#125; 随机输出结果： 123i=[2, 63, 20, 56, 22, 1, 34, 43, 5, 58]i=[1, 2, 5, 20, 22, 34, 43, 56, 58, 63]最大值63; 最小值：1; 平均值：30; 总和:304 三、从键盘输入一个字符（a-d）和一个整数，随机产生并显示一个指定长度（长度为输入的那个整数）的字符串（由小写a-d英文字母构成）。统计字符串中出现指定字符的次数，并把字符串中所有与指定的字符相同的字符删除后输出。代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253import java.util.*; public class Adarrays &#123; static private String c,d; static int b,j ,g; public static String getRandomString(int length)&#123; //定义一个字符串a-z即26位； String str1="zxcvbnmlkjhgfdsaqwertyuiop"; //由Random生成随机数 Random random=new Random(); StringBuffer a=new StringBuffer(); //长度为几就循环几次 for(int i=0; i&lt;length; ++i)&#123; //产生0-26的数字 int number=random.nextInt(26); //将产生的数字通过length次承载到a中 a.append(str1.charAt(number)); &#125; //将承载的字符转换成字符串 return a.toString(); &#125; public static void main(String[] args) &#123; //从键盘输入一个字母和一个整数 System.out.println("请输入一个字母和一个整数："); Scanner scan = new Scanner(System.in); String str2 = scan.next(); //将字符串内的内容逐个放入数组a char[] a = str2.toCharArray(); System.out.println(Arrays.toString(a)); char[] a1=new char[a.length-1]; System.arraycopy(a,1,a1,0,a.length-1); //将复制好的数组a1转化为字符串 StringBuffer str4 = new StringBuffer(); for (char s : a1) &#123; str4.append(s); &#125; d=str4.toString(); b=Integer.parseInt(d); //转化为整数型 //随机产生并显示一个指定长度（前面输入的整数）的字符串（由小写a-d英文字母构成） System.out.println("随机生成的字符为："); System.out.println(c=getRandomString(b)); //输入要删除的字母 System.out.println("请输入要删除的字母："); String str3 = scan.next(); //统计要删除字母的个数 char[] k = c.toCharArray(); String str = c.replace(str3, "");//删除指定字符后的字符串 char[] l = str.toCharArray(); g=k.length-l.length; System.out.println("删除的字符个数为："+g); System.out.println("删除后的字符为："+str); &#125;&#125; 输出样式： 123456789请输入一个字母和一个整数：z23[z, 2, 3]随机生成的字符为：ltycorftlhejqyelsiujsyd请输入要删除的字母：s删除的字符个数为：2删除后的字符为：ltycorftlhejqyeliujyd]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>实验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中的b=b++与c++中是不同的]]></title>
    <url>%2Fjava%2F2019%2F07%2F30%2F2019-07-30-Java%E4%B8%AD%E7%9A%84b%3Db%2B%2B%E4%B8%8Ec%2B%2B%E4%B8%AD%E6%98%AF%E4%B8%8D%E5%90%8C%E7%9A%84.html</url>
    <content type="text"><![CDATA[Java中经常有一些不同于c++，下面是一个要注意的例子 代码如下： 123456789 int b = 1; int a=1;for(int i = 0;i &lt; 100;i++)&#123; b = b++; a++;&#125;System.out.println("b = "+b);System.out.println("a = "+a); Output: b = 1 a = 101 b++这个表达式是有返回值的，返回的值是自加前的b,所以即使后面的b+自加了，返回的b还是1。 换个思路讲，如果把b++换成++b那么b的输出结果也会是101，因为此时的返回值是自加后的b; 而在c++中（b = b++）和（b++）的输出结果是一样的。 下面看穿插一道经典的C语言的经典输出题目 123int a = 1;printf("%d, %d, a = %d\n", (a*=2), (a+=3), a);return 0; 题目来源的博客，有答案]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大一生活在广财大]]></title>
    <url>%2F%E7%94%9F%E6%B4%BB%2F2019%2F07%2F22%2F%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95%E7%94%A8makedown%E7%BC%96%E8%BE%91%E6%96%87%E6%9C%AC.html</url>
    <content type="text"><![CDATA[前言： 搭建这个私人博客用了我大概三天的时间，现在还有很多没有完善的地方，先写一下试试吧。关于学习的东西现在学到是十分可怜，于是就想想记录一下大一的生活，以后会将学到的东西记录下来的。 时间来到新生军训军训的时候最惬意的时光就是下午休息时坐在西门进来的校道，偶尔有情侣路过我们会一起“当，当，当”（自行脑补），当然有师兄师姐路过我们会一齐向他们问好的，不过还是会看到他们为了躲避我们绕道而行。下面附上软工一、二班的军训合影，还有我和室友的合影。 刚进社团时的青涩脸庞这张图应该是实践部的第一次见面，再一次遇到小浩哥，辣个初一时坐过一节早读课同桌的男人。 下面这张图该是公关部一起为秋霞和嘉琪过生日的时候。 我的十八岁生日室友给我过的生日，实践部的海华兄和我同一天生日。 宿管叔叔也是很好，跟他借火机他直接就送给我们了。 宿舍大佬喝肥仔快乐水也是十分讲究，哈哈哈。 我、奕翰和文君一起过生日。当天晚上我们在一教的某个课室玩狼人杀到半夜，过程中我们还要躲避保安的手电筒，让我想起了初高中躲避宿管的住宿生活，只不过体验不同罢了，一份是惊喜，一份是惊恐。很幸运。 校外友人篇某位老哥来广财找他女朋友，中间抽时间请了我们一顿烧烤，于是就有了下面这张过分美颜的图片。 一起去广州给平兄过生日，路过华师的时候意外地领奖了。 两位小学大佬找我玩，约我去长隆，而他们却提前背着我去拔火罐了，最后发现只有快乐干线适合我。 节日篇圣诞节给公关部的师兄师姐送礼物和贺卡。 实践部一起过平安夜 记得还有好玩的男生节和女生节，不过图片大都找不到了。 送旧篇很遗憾错过了公关部送旧，祝师兄师姐一帆风顺。 实践部送旧，还记得小浩哥精心挑选的用快递袋装的礼物，很real. 还有，下学期担任党章社副社长，十分荣幸。 惠州游本来计划是去顺德的，可是却因为一个人，改变了行程，于是去了惠州给光爷安排。 光爷人很好，知道我喜欢看海贼王，送给我一件优衣库和海贼王的联名T。 还有他写着暴富梦想的孔明灯最后因为风太大放不起。然后亲自踩掉了。 我和阿正合作的摄影作品。还有光爷给我们拍的快乐背影。 我、阿正和光爷的合影。 写在最后第一次尝试去写，还有很多事和人没补充哈哈，这一年谢谢大家关照了。 最后福利小帅镇楼。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
</search>
